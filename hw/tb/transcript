# vsim -lib work -c Vortex_mem_slave_tb -coverage -do "run -all;" 
# Start time: 14:08:23 on Nov 14,2023
# ** Note: (vsim-3813) Design is being optimized due to module recompilation...
# //  Questa Sim-64
# //  Version 10.6b linux_x86_64 May 25 2017
# //
# //  Copyright 1991-2017 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  QuestaSim and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading sv_std.std
# Loading work.Vortex_mem_slave_tb(fast)
# Loading work.test(fast)
# Loading work.Vortex_mem_slave(fast)
# ** Warning: (vsim-8634) Code was not compiled with coverage options.
# run -all
# init
# 
# reset testing
# 
# -> testing assert reset
# 
# -> testing deassert nRST
# 
# 	-> checking this clock cycle
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# Vortex read testing
# 
# -> testing read from instr segment 1
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing read from instr segment 2
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x121071d301c5230301852683010531070085308700053007d805051300002517009001930cc59a630c731c630cd51e6300000613001015f30005250300452383
# 	  output: 0x0007806bfff0079300112623ff0101130003006700e505330047a5830007a3030087a7030007a78300e787b30f4787930000179700279713cc202573cc5027f3
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing read from first data segment 1
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 	  output: 0x0000000000000000000000000000000000000000000000000000000000000000800013cc80001364800012fc000000000000000000000000000000008000007c
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing read from first data segment 2
# 
# 	-> checking next clock cycle
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing read from second data segment 1
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0xc09348000000000000000000000000003ff199999999999ac0934c6666666666400c00000000000000000000000000003ff00000000000004004000000000000
# 	  output: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing read from second data segment 2
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x40953a70a3d70a3d0000000000000000bff199999999999ac0934c6666666666400400000000000000000000000000003ff00000000000004004000000000000
# 	  output: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# Vortex write testing
# 
# -> testing write to first data segment
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 	  output: 0x0000000000000000000000000000000000000000000000000000000000000000800013cc80001364800012fc000000000000000000000000000000008000007c
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing read after write to first data segment
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x0123456789abcdef0123456789abcdef000000000000000000000000000000000123456789abcdef0123456789abcdef00000000000000000000000000000000
# 	  output: 0x0123456789abcdef0123456789abcdef000000000000000000000000000000000123456789abcdef0123456789abcdef0000000000000000000000008000007c
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing write to second data segment
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x40953a70a3d70a3d0000000000000000bff199999999999ac0934c6666666666400400000000000000000000000000003ff00000000000004004000000000000
# 	  output: 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing read after write to second data segment
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x40953a7089abcdef0123456700000000012345679999999ac0934c6689abcdef4004000089abcdef0000000089abcdef01234567000000000123456700000000
# 	  output: 0x0000000089abcdef012345670000000001234567000000000000000089abcdef0000000089abcdef0000000089abcdef01234567000000000123456700000000
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# AHB read testing
# 
# -> testing AHB read from instr segment 1
# 
# 	-> checking next clock cycle
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x0480006f
# 	  output: 0xfc102573
# 
# -> testing AHB read from instr segment 2
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x00001f17
# 	  output: 0x40850513
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x00001f17
# 	  output: 0x40850513
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0x00001f17
# 	  output: 0x40850513
# 
# -> testing AHB read from first data segment 1
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# -> testing AHB read from first data segment 2
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# -> testing AHB read from second data segment 1
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0xc0934c66
# 	  output: 0x00000000
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0xc0934c66
# 	  output: 0x00000000
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0xc0934c66
# 	  output: 0x00000000
# 
# -> testing AHB read from second data segment 2
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0xe2308c3a
# 	  output: 0x00000000
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0xe2308c3a
# 	  output: 0x00000000
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	bpif.rdata:
# 	expected: 0xe2308c3a
# 	  output: 0x00000000
# AHB write testing
# 
# -> testing write to first data segment 1
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# -> testing read after write to first data segment 1
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# -> testing write to first data segment 2
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# -> testing read after write to first data segment 2
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# -> testing write to random word
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# -> testing read after write to random word
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 	mem_rsp_data:
# 	expected: 0x00001f175391e1930040006f000f546334202f73000f0067000f046300000f1303ff006300b00f9303ff046300900f9303ff086300800f9334202f730480006f
# 	  output: 0x40850513000015170005006b00100513114000ef00b5106b1205859300000597fc1025730005006b00100513090000ef00b5106b09c5859300000597fc102573
# 
# //////////////////////
# // testing results: //
# //////////////////////
# 
# UNSUCCESSFUL VERIFICATION
#          64 error(s)
# 
# ** Note: $finish    : Vortex_mem_slave_tb.sv(1700)
#    Time: 610 ns  Iteration: 1  Instance: /Vortex_mem_slave_tb/PROG
# End time: 14:08:24 on Nov 14,2023, Elapsed time: 0:00:01
# Errors: 0, Warnings: 1
